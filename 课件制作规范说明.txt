课件制作规范说明
================

一、基本要求
-----------
1. 课件类型：HTML静态页面，适合初中生学习
2. 风格：动漫/漫画风格，幽默风趣，贴近初中生审美
3. 功能：按空格/方向键逐步展示内容，适合教学节奏控制

二、交互控制要求
---------------
1. 键盘控制：
   - 空格键：前进到下一步
   - ↓ 向下箭头：前进到下一步
   - → 向右箭头：前进到下一步
   - ↑ 向上箭头：后退到上一步
   - ← 向左箭头：后退到上一步

2. 触摸控制（移动设备）：
   - ⬅️ 按钮：后退到上一步
   - ➡️ 按钮：前进到下一步
   - 防抖机制：300ms内只执行一次，避免双击缩放

三、内容展示逻辑
---------------
1. 初始状态：
   - 只显示 hero div（标题部分）
   - 显示 nav div（导航菜单，始终可见）
   - 所有 section div 和内容元素都隐藏

2. 展示顺序：
   - 第1步：显示 intro section + intro标题
   - 第2步：显示 intro第一个对话
   - 第3步：显示 intro第二个对话
   - 第4步：显示 intro的提示
   - 第5步：显示 nouns section + nouns标题
   - 第6步：显示 nouns第一个对话
   - 第7步：显示 nouns第二个对话
   - 第8步：显示 nouns的提示
   - 第9步：显示 nouns的练习
   - 继续按此模式...

3. 展示规则：
   - 每个section先显示容器+标题，再逐步显示剩余内容
   - 内容展示完后再展示下一个section
   - 自上而下按页面顺序逐个展示

四、技术实现要求
---------------
1. CSS样式：
   - 使用CSS变量定义颜色主题
   - 所有需要逐步展示的元素初始opacity为0
   - 添加transform和transition实现平滑动画
   - 响应式设计，支持移动端

2. JavaScript功能：
   - ContentPresenter类管理展示逻辑
   - 步骤数组定义展示顺序
   - 前进/后退方法控制内容显示
   - 自动滚动到当前元素位置（屏幕中间）
   - 触摸事件处理，避免双击缩放

3. 元素选择器：
   - section：整个内容块
   - h2：标题
   - .dialog：对话内容
   - .tip：提示信息
   - .practice：练习内容

4. 语音播放组件：
   - 自动为角色头像添加喇叭按钮
   - 支持角色语音配置
   - 点击播放角色对话内容

五、文件结构要求
---------------
1. HTML结构：
   - hero div：课件标题和描述
   - nav div：导航菜单（始终可见）
   - 多个section div：每个语法点一个section
   - 触摸控制按钮（移动端显示）
   - 键盘提示（桌面端显示）

2. 样式文件：
   - 内嵌CSS，确保样式完整
   - 响应式媒体查询
   - 触摸按钮样式

3. 脚本文件：
   - 内嵌JavaScript，确保功能完整
   - 触摸事件处理
   - 键盘事件处理
   - 引入语音播放组件：`<script src="../../js/speech-player.js"></script>`

六、移动端适配要求
-----------------
1. 触摸控制：
   - 显示触摸按钮，隐藏键盘提示
   - 触摸事件防抖
   - 禁用双击缩放

2. 响应式布局：
   - 小屏幕下hero垂直排列
   - nav移到页面底部
   - 触摸按钮固定在底部

七、教学使用说明
---------------
1. 适用场景：
   - 课堂演示
   - 学生自学
   - 远程教学

2. 操作方式：
   - 桌面端：键盘控制
   - 移动端：触摸控制
   - 支持前进后退，灵活调整节奏

3. 优势：
   - 控制信息展示节奏
   - 学生注意力集中
   - 避免信息过载
   - 支持复习和回顾

八、制作步骤
-----------
1. 创建HTML结构
2. 设计CSS样式（动漫风格）
3. 实现JavaScript交互逻辑
4. 添加触摸控制支持
5. 引入语音播放组件
6. 测试键盘、触摸和语音功能
7. 优化移动端体验

九、注意事项
-----------
1. 确保所有元素都有正确的选择器
2. 步骤数组要与HTML结构对应
3. 触摸事件要防止双击缩放
4. 响应式设计要测试不同屏幕尺寸
5. 动画效果要流畅自然
6. 确保语音播放组件正确引入和初始化
7. 角色头像必须使用 .char 或 .avatar 类名

十、示例代码结构
---------------
```javascript
class ContentPresenter {
    constructor() {
        this.currentStep = 0;
        this.touchCooldown = false;
        this.steps = [
            // 步骤定义
        ];
        this.init();
    }
    
    init() {
        this.hideAllElements();
        this.nextStep();
        this.bindKeyboardEvents();
        this.bindTouchControls();
        this.showSpaceHint();
    }
    
    // 其他方法...
}
```

这个规范确保所有课件都有一致的交互体验和教学效果。
